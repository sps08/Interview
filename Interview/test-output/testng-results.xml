<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="14" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="branchTests" duration-ms="36081" started-at="2018-08-20T08:57:51Z" finished-at="2018-08-20T08:58:27Z">
    <groups>
    </groups>
    <test name="Btest01" duration-ms="36081" started-at="2018-08-20T08:57:51Z" finished-at="2018-08-20T08:58:27Z">
      <class name="testsuites.BranchHomePageTests">
        <test-method status="PASS" signature="setup()[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="setup" is-config="true" duration-ms="1333" started-at="2018-08-20T01:57:50Z" finished-at="2018-08-20T01:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="beforeMethod" is-config="true" duration-ms="4" started-at="2018-08-20T01:57:51Z" finished-at="2018-08-20T01:57:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsuites.BranchHomePageTests.OpenGoogleWebSiteAndSearchCompanyURL()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="OpenGoogleWebSiteAndSearchCompanyURL()[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="OpenGoogleWebSiteAndSearchCompanyURL" duration-ms="2352" started-at="2018-08-20T01:57:51Z" description=" Open the Google website and Searcg Branch Company Name" finished-at="2018-08-20T01:57:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenGoogleWebSiteAndSearchCompanyURL -->
        <test-method status="PASS" signature="AfterTest(org.testng.ITestResult)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="AfterTest" is-config="true" duration-ms="2" started-at="2018-08-20T01:57:53Z" finished-at="2018-08-20T01:57:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OpenGoogleWebSiteAndSearchCompanyURL status=SUCCESS method=BranchHomePageTests.OpenGoogleWebSiteAndSearchCompanyURL()[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-20T01:57:53Z" finished-at="2018-08-20T01:57:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsuites.BranchHomePageTests.NavigateToCompanyUrl()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="NavigateToCompanyUrl()[pri:1, instance:testsuites.BranchHomePageTests@3c0a50da]" name="NavigateToCompanyUrl" duration-ms="71" started-at="2018-08-20T01:57:53Z" description=" Click on Branch Company and Navigate to Branch company Website" finished-at="2018-08-20T01:57:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToCompanyUrl -->
        <test-method status="PASS" signature="AfterTest(org.testng.ITestResult)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="AfterTest" is-config="true" duration-ms="1" started-at="2018-08-20T01:57:53Z" finished-at="2018-08-20T01:57:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NavigateToCompanyUrl status=SUCCESS method=BranchHomePageTests.NavigateToCompanyUrl()[pri:1, instance:testsuites.BranchHomePageTests@3c0a50da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-20T01:57:53Z" finished-at="2018-08-20T01:57:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsuites.BranchHomePageTests.ClickonTeamLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ClickonTeamLink()[pri:2, instance:testsuites.BranchHomePageTests@3c0a50da]" name="ClickonTeamLink" duration-ms="2171" started-at="2018-08-20T01:57:53Z" description="Click on Team link available on footer" finished-at="2018-08-20T01:57:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickonTeamLink -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-08-20T01:57:56Z" finished-at="2018-08-20T01:57:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsuites.BranchHomePageTests.getNamesOfEmployeesInAllDept()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="AfterTest(org.testng.ITestResult)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="AfterTest" is-config="true" duration-ms="0" started-at="2018-08-20T01:57:56Z" finished-at="2018-08-20T01:57:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickonTeamLink status=SUCCESS method=BranchHomePageTests.ClickonTeamLink()[pri:2, instance:testsuites.BranchHomePageTests@3c0a50da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="PASS" signature="getNamesOfEmployeesInAllDept()[pri:3, instance:testsuites.BranchHomePageTests@3c0a50da]" name="getNamesOfEmployeesInAllDept" duration-ms="3960" started-at="2018-08-20T01:57:56Z" description="In All Tabs get All the Employeee Count and Employee Names" finished-at="2018-08-20T01:57:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNamesOfEmployeesInAllDept -->
        <test-method status="PASS" signature="AfterTest(org.testng.ITestResult)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="AfterTest" is-config="true" duration-ms="0" started-at="2018-08-20T01:57:59Z" finished-at="2018-08-20T01:57:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getNamesOfEmployeesInAllDept status=SUCCESS method=BranchHomePageTests.getNamesOfEmployeesInAllDept()[pri:3, instance:testsuites.BranchHomePageTests@3c0a50da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-20T01:57:59Z" finished-at="2018-08-20T01:57:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsuites.BranchHomePageTests.ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)[pri:6, instance:testsuites.BranchHomePageTests@3c0a50da]" name="ClickOnEveryDeptTabAndFetchTotalNoOfEmployees" duration-ms="171" started-at="2018-08-20T01:57:59Z" description="Click on All the Depatments and count no of Employees and employee Names in each Department" data-provider="MyTabsCollection" finished-at="2018-08-20T01:58:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[data]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickOnEveryDeptTabAndFetchTotalNoOfEmployees -->
        <test-method status="PASS" signature="AfterTest(org.testng.ITestResult)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="AfterTest" is-config="true" duration-ms="1" started-at="2018-08-20T01:58:00Z" finished-at="2018-08-20T01:58:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickOnEveryDeptTabAndFetchTotalNoOfEmployees status=SUCCESS method=BranchHomePageTests.ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)[pri:6, instance:testsuites.BranchHomePageTests@3c0a50da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="PASS" signature="ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)[pri:6, instance:testsuites.BranchHomePageTests@3c0a50da]" name="ClickOnEveryDeptTabAndFetchTotalNoOfEmployees" duration-ms="488" started-at="2018-08-20T01:58:00Z" description="Click on All the Depatments and count no of Employees and employee Names in each Department" data-provider="MyTabsCollection" finished-at="2018-08-20T01:58:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[engineering]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickOnEveryDeptTabAndFetchTotalNoOfEmployees -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-20T01:58:00Z" finished-at="2018-08-20T01:58:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsuites.BranchHomePageTests.ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="AfterTest(org.testng.ITestResult)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="AfterTest" is-config="true" duration-ms="0" started-at="2018-08-20T01:58:00Z" finished-at="2018-08-20T01:58:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickOnEveryDeptTabAndFetchTotalNoOfEmployees status=SUCCESS method=BranchHomePageTests.ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)[pri:6, instance:testsuites.BranchHomePageTests@3c0a50da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="PASS" signature="ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)[pri:6, instance:testsuites.BranchHomePageTests@3c0a50da]" name="ClickOnEveryDeptTabAndFetchTotalNoOfEmployees" duration-ms="217" started-at="2018-08-20T01:58:00Z" description="Click on All the Depatments and count no of Employees and employee Names in each Department" data-provider="MyTabsCollection" finished-at="2018-08-20T01:58:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[marketing]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickOnEveryDeptTabAndFetchTotalNoOfEmployees -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-20T01:58:00Z" finished-at="2018-08-20T01:58:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsuites.BranchHomePageTests.ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="AfterTest(org.testng.ITestResult)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="AfterTest" is-config="true" duration-ms="0" started-at="2018-08-20T01:58:00Z" finished-at="2018-08-20T01:58:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickOnEveryDeptTabAndFetchTotalNoOfEmployees status=SUCCESS method=BranchHomePageTests.ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)[pri:6, instance:testsuites.BranchHomePageTests@3c0a50da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-20T01:58:00Z" finished-at="2018-08-20T01:58:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsuites.BranchHomePageTests.ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)[pri:6, instance:testsuites.BranchHomePageTests@3c0a50da]" name="ClickOnEveryDeptTabAndFetchTotalNoOfEmployees" duration-ms="133" started-at="2018-08-20T01:58:00Z" description="Click on All the Depatments and count no of Employees and employee Names in each Department" data-provider="MyTabsCollection" finished-at="2018-08-20T01:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[operations]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickOnEveryDeptTabAndFetchTotalNoOfEmployees -->
        <test-method status="PASS" signature="AfterTest(org.testng.ITestResult)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="AfterTest" is-config="true" duration-ms="0" started-at="2018-08-20T01:58:01Z" finished-at="2018-08-20T01:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickOnEveryDeptTabAndFetchTotalNoOfEmployees status=SUCCESS method=BranchHomePageTests.ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)[pri:6, instance:testsuites.BranchHomePageTests@3c0a50da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="PASS" signature="ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)[pri:6, instance:testsuites.BranchHomePageTests@3c0a50da]" name="ClickOnEveryDeptTabAndFetchTotalNoOfEmployees" duration-ms="601" started-at="2018-08-20T01:58:01Z" description="Click on All the Depatments and count no of Employees and employee Names in each Department" data-provider="MyTabsCollection" finished-at="2018-08-20T01:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[partner growth]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickOnEveryDeptTabAndFetchTotalNoOfEmployees -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-20T01:58:01Z" finished-at="2018-08-20T01:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsuites.BranchHomePageTests.ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="AfterTest(org.testng.ITestResult)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="AfterTest" is-config="true" duration-ms="1" started-at="2018-08-20T01:58:01Z" finished-at="2018-08-20T01:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickOnEveryDeptTabAndFetchTotalNoOfEmployees status=SUCCESS method=BranchHomePageTests.ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)[pri:6, instance:testsuites.BranchHomePageTests@3c0a50da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-20T01:58:01Z" finished-at="2018-08-20T01:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsuites.BranchHomePageTests.ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)[pri:6, instance:testsuites.BranchHomePageTests@3c0a50da]" name="ClickOnEveryDeptTabAndFetchTotalNoOfEmployees" duration-ms="114" started-at="2018-08-20T01:58:01Z" description="Click on All the Depatments and count no of Employees and employee Names in each Department" data-provider="MyTabsCollection" finished-at="2018-08-20T01:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[product]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickOnEveryDeptTabAndFetchTotalNoOfEmployees -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-20T01:58:01Z" finished-at="2018-08-20T01:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsuites.BranchHomePageTests.ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="AfterTest(org.testng.ITestResult)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="AfterTest" is-config="true" duration-ms="0" started-at="2018-08-20T01:58:01Z" finished-at="2018-08-20T01:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickOnEveryDeptTabAndFetchTotalNoOfEmployees status=SUCCESS method=BranchHomePageTests.ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)[pri:6, instance:testsuites.BranchHomePageTests@3c0a50da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="PASS" signature="ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)[pri:6, instance:testsuites.BranchHomePageTests@3c0a50da]" name="ClickOnEveryDeptTabAndFetchTotalNoOfEmployees" duration-ms="114" started-at="2018-08-20T01:58:01Z" description="Click on All the Depatments and count no of Employees and employee Names in each Department" data-provider="MyTabsCollection" finished-at="2018-08-20T01:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[recruiting]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickOnEveryDeptTabAndFetchTotalNoOfEmployees -->
        <test-method status="PASS" signature="AfterTest(org.testng.ITestResult)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="AfterTest" is-config="true" duration-ms="1" started-at="2018-08-20T01:58:01Z" finished-at="2018-08-20T01:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickOnEveryDeptTabAndFetchTotalNoOfEmployees status=SUCCESS method=BranchHomePageTests.ClickOnEveryDeptTabAndFetchTotalNoOfEmployees(java.lang.String)[pri:6, instance:testsuites.BranchHomePageTests@3c0a50da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="FAIL" signature="FillContactPageForDemo(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:7, instance:testsuites.BranchHomePageTests@3c0a50da]" name="FillContactPageForDemo" duration-ms="25633" started-at="2018-08-20T01:58:01Z" finished-at="2018-08-20T01:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[singh.satinder0887@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Demo to Show example of data paramterization in TESTNG- Satinder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Billing]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Demo Test Case QA Automation]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Satinder]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"id","selector":"notice"}
  (Session info: chrome=68.0.3440.106)
  (Driver info: chromedriver=2.41.578706 (5f725d1b4f0a4acbf5259df887244095596231db),platform=Mac OS X 10.13.4 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 20.03 seconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.4.0', revision: 'unknown', time: 'unknown'
System info: host: 'Admins-MacBook-Pro.local', ip: '2601:647:4501:3d05:9535:d3d7:ad60:b8cf%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.4', java.version: '1.8.0_172'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, hasTouchScreen=false, platform=MAC, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:62016}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.41.578706 (5f725d1b4f0a4acbf5259df887244095596231db), userDataDir=/var/folders/kv/9v30_56s2pv8zbfpb3q7q_t40000gp/T/.org.chromium.Chromium.kPRCxH}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, version=68.0.3440.106, browserConnectionEnabled=false, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: c1a5c282676d5f03d2760e2d39753be5
*** Element info: {Using=id, value=notice}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"id","selector":"notice"}
  (Session info: chrome=68.0.3440.106)
  (Driver info: chromedriver=2.41.578706 (5f725d1b4f0a4acbf5259df887244095596231db),platform=Mac OS X 10.13.4 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 20.03 seconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.4.0', revision: 'unknown', time: 'unknown'
System info: host: 'Admins-MacBook-Pro.local', ip: '2601:647:4501:3d05:9535:d3d7:ad60:b8cf%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.4', java.version: '1.8.0_172'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, hasTouchScreen=false, platform=MAC, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:62016}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.41.578706 (5f725d1b4f0a4acbf5259df887244095596231db), userDataDir=/var/folders/kv/9v30_56s2pv8zbfpb3q7q_t40000gp/T/.org.chromium.Chromium.kPRCxH}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, version=68.0.3440.106, browserConnectionEnabled=false, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: c1a5c282676d5f03d2760e2d39753be5
*** Element info: {Using=id, value=notice}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:671)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:410)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:453)
	at org.openqa.selenium.By$ById.findElement(By.java:218)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:402)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy11.getText(Unknown Source)
	at Pages.ContactPage.getTicketCreateMessage(ContactPage.java:92)
	at testsuites.BranchHomePageTests.FillContactPageForDemo(BranchHomePageTests.java:119)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FillContactPageForDemo -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-20T01:58:01Z" finished-at="2018-08-20T01:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsuites.BranchHomePageTests.FillContactPageForDemo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="AfterTest(org.testng.ITestResult)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="AfterTest" is-config="true" duration-ms="0" started-at="2018-08-20T01:58:27Z" finished-at="2018-08-20T01:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FillContactPageForDemo status=FAILURE method=BranchHomePageTests.FillContactPageForDemo(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:7, instance:testsuites.BranchHomePageTests@3c0a50da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-20T01:58:27Z" finished-at="2018-08-20T01:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsuites.BranchHomePageTests.CompareCountinAllTabAndOthersTabs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="CompareCountinAllTabAndOthersTabs()[pri:7, instance:testsuites.BranchHomePageTests@3c0a50da]" name="CompareCountinAllTabAndOthersTabs" duration-ms="2" started-at="2018-08-20T01:58:27Z" description="Compare the No of Employees in All tab and Other Dept tabs" depends-on-methods="testsuites.BranchHomePageTests.ClickOnEveryDeptTabAndFetchTotalNoOfEmployees, testsuites.BranchHomePageTests.getNamesOfEmployeesInAllDept" finished-at="2018-08-20T01:58:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [126] but found [131]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [126] but found [131]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at testsuites.BranchHomePageTests.CompareCountinAllTabAndOthersTabs(BranchHomePageTests.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CompareCountinAllTabAndOthersTabs -->
        <test-method status="PASS" signature="AfterTest(org.testng.ITestResult)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="AfterTest" is-config="true" duration-ms="1" started-at="2018-08-20T01:58:27Z" finished-at="2018-08-20T01:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CompareCountinAllTabAndOthersTabs status=FAILURE method=BranchHomePageTests.CompareCountinAllTabAndOthersTabs()[pri:7, instance:testsuites.BranchHomePageTests@3c0a50da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-08-20T01:58:27Z" finished-at="2018-08-20T01:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsuites.BranchHomePageTests.CompareNamesinAllTabsAndOthersTabs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="CompareNamesinAllTabsAndOthersTabs()[pri:8, instance:testsuites.BranchHomePageTests@3c0a50da]" name="CompareNamesinAllTabsAndOthersTabs" duration-ms="1" started-at="2018-08-20T01:58:27Z" description="Compare the Number of employees in All tabs and Other departments" depends-on-methods="testsuites.BranchHomePageTests.ClickOnEveryDeptTabAndFetchTotalNoOfEmployees, testsuites.BranchHomePageTests.getNamesOfEmployeesInAllDept" finished-at="2018-08-20T01:58:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[lists don't have the same size expected [126] but found [5]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: lists don't have the same size expected [126] but found [5]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:556)
	at org.testng.Assert.assertEquals(Assert.java:533)
	at testsuites.BranchHomePageTests.CompareNamesinAllTabsAndOthersTabs(BranchHomePageTests.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CompareNamesinAllTabsAndOthersTabs -->
        <test-method status="PASS" signature="AfterTest(org.testng.ITestResult)[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="AfterTest" is-config="true" duration-ms="0" started-at="2018-08-20T01:58:27Z" finished-at="2018-08-20T01:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CompareNamesinAllTabsAndOthersTabs status=FAILURE method=BranchHomePageTests.CompareNamesinAllTabsAndOthersTabs()[pri:8, instance:testsuites.BranchHomePageTests@3c0a50da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:testsuites.BranchHomePageTests@3c0a50da]" name="teardown" is-config="true" duration-ms="382" started-at="2018-08-20T01:58:27Z" finished-at="2018-08-20T01:58:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- testsuites.BranchHomePageTests -->
    </test> <!-- Btest01 -->
  </suite> <!-- branchTests -->
</testng-results>
